{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-13T20:39:13.950Z",
    "end": "2025-09-13T20:39:14.015Z",
    "duration": 65,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "68a11cc5-63a0-4530-b9d1-044ed4805e81",
      "title": "",
      "fullFile": "C:\\Users\\alves\\Desktop\\Testes_API_REST_And_Graphql\\test\\rest\\external\\checkoutExternal.test.js",
      "file": "\\test\\rest\\external\\checkoutExternal.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b6a437d-4d22-42ae-bfac-81d2e44e987e",
          "title": "checkout",
          "fullFile": "C:\\Users\\alves\\Desktop\\Testes_API_REST_And_Graphql\\test\\rest\\external\\checkoutExternal.test.js",
          "file": "\\test\\rest\\external\\checkoutExternal.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d06a7759-5c04-4855-934d-ae95fe7c1bbe",
              "title": "POST /api/checkout",
              "fullFile": "C:\\Users\\alves\\Desktop\\Testes_API_REST_And_Graphql\\test\\rest\\external\\checkoutExternal.test.js",
              "file": "\\test\\rest\\external\\checkoutExternal.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"POST /api/checkout\"",
                  "fullTitle": "checkout POST /api/checkout \"before all\" hook in \"POST /api/checkout\"",
                  "timedOut": false,
                  "duration": 38,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaLogin = await request(\"http://localhost:3000\")\n    .post('/api/users/login')\n    .send({\n        \"email\": \"bob@email.com\",\n        \"password\": \"123456\"\n    });\ntoken = respostaLogin.body.token;",
                  "err": {},
                  "uuid": "e780411c-4c88-4f92-8de3-33b3609d1dfd",
                  "parentUUID": "d06a7759-5c04-4855-934d-ae95fe7c1bbe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deve fazer checkout com boleto",
                  "fullTitle": "checkout POST /api/checkout deve fazer checkout com boleto",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(\"http://localhost:3000\")\n    .post('/api/checkout')\n    .set('Authorization', `Bearer ${token}`)\n    .send({\n        \"items\": [\n            {\n                \"productId\": 1,\n                \"quantity\": 2\n            },\n                                    {\n                \"productId\": 2,\n                \"quantity\": 1\n            }\n        ],\n        \"freight\": 0,\n        \"paymentMethod\": \"boleto\",\n        \"cardData\": {\n            \"number\": \"string\",\n            \"name\": \"string\",\n            \"expiry\": \"string\",\n            \"cvv\": \"string\"\n        }\n    });\nexpect(resposta.status).to.equal(200);\nexpect(resposta.body).to.have.property('valorFinal', 400);                 \nexpect(resposta.body).to.have.property('paymentMethod', 'boleto');\nresposta.body.items.forEach(item => {\n    expect(item).to.have.property('productId');\n});",
                  "err": {},
                  "uuid": "01a19fa8-3107-4c7a-bc38-af2645c7f81d",
                  "parentUUID": "d06a7759-5c04-4855-934d-ae95fe7c1bbe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01a19fa8-3107-4c7a-bc38-af2645c7f81d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}